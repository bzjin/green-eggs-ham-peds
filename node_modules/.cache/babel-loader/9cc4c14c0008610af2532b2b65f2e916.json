{"ast":null,"code":"var i = [\"allowfullscreen\"];\n\nfunction t(t, n) {\n  for (var o = {}, r = t.attributes, s = r.length, e = n.length, h = 0; h < s; h++) {\n    var a = r[h].name;\n\n    if (a.substr(0, e) === n) {\n      var c = a.slice(e),\n          f = r[h].value;\n      i.indexOf(c) > -1 && (f = !0), o[c] = f;\n    }\n  }\n\n  return o;\n}\n\nfunction n(i, t) {\n  for (var n in t) i[n] = t[n];\n\n  return i;\n}\n\nvar o = \"embed-size\",\n    r = \"amp\",\n    s = \"data-frame-\",\n    e = s + \"auto-initialized\",\n    h = s + \"src\",\n    a = function (i) {\n  var t = i.allowfullscreen;\n  void 0 === t && (t = !1);\n  var n = i.name,\n      o = i.referrerpolicy,\n      r = i.sandbox;\n  void 0 === r && (r = \"allow-scripts\");\n  var s = i.src,\n      e = i.title;\n  this.container = i.container, this.src = s, this.allowfullscreen = t, this.name = n, this.referrerpolicy = o, this.sandbox = r, this.title = e, this.i = this.i.bind(this), window.addEventListener(\"message\", this.i, !1), this.t();\n};\n\nfunction c() {\n  for (var i = document.querySelectorAll(\"[\" + h + \"]:not([\" + e + \"])\"), o = [], r = 0; r < i.length; r++) {\n    var c = i[r],\n        f = t(c, s);\n    c.setAttribute(e, \"\"), o.push(new a(n({\n      container: c\n    }, f)));\n  }\n\n  return o;\n}\n\nfunction f(i) {\n  var t;\n  void 0 === i && (i = document.documentElement.offsetHeight), void 0 === (t = {\n    height: i\n  }) && (t = {}), window.parent.postMessage(n({\n    sentinel: r,\n    type: o\n  }, t), \"*\");\n}\n\nfunction u() {\n  window.addEventListener(\"load\", function i() {\n    f(), window.removeEventListener(\"load\", i);\n  });\n}\n\nfunction d() {\n  window.addEventListener(\"resize\", function () {\n    return f();\n  });\n}\n\nfunction l(i) {\n  void 0 === i && (i = 300), setInterval(f, i);\n}\n\nfunction v() {\n  f(), u(), d();\n}\n\nfunction w(i) {\n  v(), l(i);\n}\n\na.prototype.remove = function () {\n  window.removeEventListener(\"message\", this.i, !1), this.container.removeChild(this.iframe), this.iframe = null;\n}, a.prototype.t = function () {\n  var i = this.iframe = document.createElement(\"iframe\");\n  i.setAttribute(\"src\", this.src), i.setAttribute(\"width\", \"100%\"), i.setAttribute(\"scrolling\", \"no\"), i.setAttribute(\"marginheight\", \"0\"), i.setAttribute(\"frameborder\", \"0\"), this.allowfullscreen && i.setAttribute(\"allowfullscreen\", \"\"), this.name && i.setAttribute(\"name\", name), this.referrerpolicy && i.setAttribute(\"referrerpolicy\", this.referrerpolicy), i.setAttribute(\"sandbox\", this.sandbox), this.title && i.setAttribute(\"title\", this.title), this.container.appendChild(i);\n}, a.prototype.i = function (i) {\n  if (i.source === this.iframe.contentWindow) {\n    var t = i.data;\n    t.sentinel === r && t.type === o && this.o(t.height);\n  }\n}, a.prototype.o = function (i) {\n  this.iframe.setAttribute(\"height\", i);\n};\nexport { c as autoInitFrames, a as Framer, v as initFrame, w as initFrameAndPoll, f as sendFrameHeight, u as sendHeightOnLoad, l as sendHeightOnPoll, d as sendHeightOnResize };","map":{"version":3,"sources":["../src/utils.mjs","../src/constants.mjs","../src/framer.mjs","../src/frames.mjs"],"names":["const","booleans","getMatchingAttributes","element","prefix","attrs","map","attributes","length","prefixLength","i","key","name","substr","field","slice","value","indexOf","extend","obj","props","let","EMBED_SIZE","AMP_SENTINEL","FRAME_PREFIX","FRAME_AUTO_INITIALIZED_ATTRIBUTE","FRAME_SRC_ATTRIBUTE","Framer","constructor","ref","container","src","allowfullscreen","referrerpolicy","sandbox","title","processMessage_","this","bind","window","addEventListener","createIframe_","remove","removeEventListener","removeChild","iframe","document","createElement","setAttribute","appendChild","event","source","contentWindow","data","sentinel","type","setIframeHeight_","height","autoInitFrames","elements","querySelectorAll","activated","push","parent","postMessage","documentElement","offsetHeight","sendFrameHeight","sendHeightOnLoad","cb","sendHeightOnResize","sendHeightOnPoll","delay","setInterval","initFrame","initFrameAndPoll"],"mappings":"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","sourcesContent":["/**\n * A white-list of attributes to consider booleans for our purposes. Because\n * iframe attributes like \"sandbox\" actually mean something when they're an\n * empty string, we can't assume that means \"true\" across the board.\n *\n * @private\n * @type {Array}\n */\nconst booleans = ['allowfullscreen'];\n\n/**\n * Searches an element's attributes and returns an Object of all the ones that\n * begin with a specified prefix. Each matching attribute name is returned\n * without the prefix.\n *\n * @private\n * @param  {Element} element\n * @param  {string} prefix\n * @return {object}\n */\nfunction getMatchingAttributes(element, prefix) {\n  // prepare the object to return\n  const attrs = {};\n\n  // grab all the attributes off the element\n  const map = element.attributes;\n\n  // get a count of the number of attributes\n  const length = map.length;\n\n  // get the prefix's length\n  const prefixLength = prefix.length;\n\n  // loop through the attributes\n  for (let i = 0; i < length; i++) {\n    // get each attribute key\n    const key = map[i].name;\n\n    // continue if the key begins with supplied prefix\n    if (key.substr(0, prefixLength) === prefix) {\n      // slice off the prefix to get the bare field key\n      const field = key.slice(prefixLength);\n\n      // grab the value associated with the key\n      let value = map[i].value;\n\n      if (booleans.indexOf(field) > -1) {\n        value = true;\n      }\n\n      // add matching key to object\n      attrs[field] = value;\n    }\n  }\n\n  return attrs;\n}\n\nfunction extend(obj, props) {\n  for (let i in props) obj[i] = props[i];\n  return obj;\n}\n\nexport { extend, getMatchingAttributes };\n","const EMBED_SIZE = 'embed-size';\nconst AMP_SENTINEL = 'amp';\nconst FRAME_PREFIX = 'data-frame-';\nconst FRAME_AUTO_INITIALIZED_ATTRIBUTE = `${FRAME_PREFIX}auto-initialized`;\nconst FRAME_SRC_ATTRIBUTE = `${FRAME_PREFIX}src`;\n\nexport {\n  AMP_SENTINEL,\n  EMBED_SIZE,\n  FRAME_PREFIX,\n  FRAME_AUTO_INITIALIZED_ATTRIBUTE,\n  FRAME_SRC_ATTRIBUTE,\n};\n","import { extend, getMatchingAttributes } from './utils.mjs';\nimport {\n  AMP_SENTINEL,\n  EMBED_SIZE,\n  FRAME_PREFIX,\n  FRAME_AUTO_INITIALIZED_ATTRIBUTE,\n  FRAME_SRC_ATTRIBUTE,\n} from './constants.mjs';\n\n/**\n * The Framer object to be called in the host page. Effectively a wrapper around\n * interactions with an embedded iframe.\n *\n * @param {object} options options used to prepare the iframe\n * @param {Element} options.container the containing DOM element for the iframe\n * @param {string} options.src the URL to set as the `src` of the iframe\n * @param {boolean} [options.allowfullscreen] toggles the `allowfullscreen` attribute\n * @param {string} [options.name] sets the `name` attribute\n * @param {string} [options.referrerpolicy] sets the `referrerpolicy` attribute\n * @param {string} [options.sandbox] sets the `sandbox` attribute\n * @param {string} [options.title] sets the `title` attribute\n */\nclass Framer {\n  constructor({\n    allowfullscreen = false,\n    container,\n    name,\n    referrerpolicy,\n    sandbox = 'allow-scripts',\n    src,\n    title,\n  }) {\n    this.container = container;\n    this.src = src;\n    this.allowfullscreen = allowfullscreen;\n    this.name = name;\n    this.referrerpolicy = referrerpolicy;\n    this.sandbox = sandbox;\n    this.title = title;\n\n    this.processMessage_ = this.processMessage_.bind(this);\n    window.addEventListener('message', this.processMessage_, false);\n\n    this.createIframe_();\n  }\n\n  /**\n   * Removes event listeners and removes the iframe from the container.\n   *\n   * @returns {void}\n   * @example\n   *\n   * const framer = new Framer(...);\n   * // tears down the Framer\n   * framer.remove();\n   */\n  remove() {\n    window.removeEventListener('message', this.processMessage_, false);\n    this.container.removeChild(this.iframe);\n    // important to de-reference the iframe so it can be GC'ed\n    this.iframe = null;\n  }\n\n  /**\n   * Creates the iframe element and sets the source of the iframe.\n   *\n   * @private\n   * @returns {void}\n   */\n  createIframe_() {\n    const iframe = (this.iframe = document.createElement('iframe'));\n\n    iframe.setAttribute('src', this.src);\n    iframe.setAttribute('width', '100%');\n    iframe.setAttribute('scrolling', 'no');\n    iframe.setAttribute('marginheight', '0');\n    iframe.setAttribute('frameborder', '0');\n\n    if (this.allowfullscreen) {\n      iframe.setAttribute('allowfullscreen', '');\n    }\n\n    if (this.name) {\n      iframe.setAttribute('name', name);\n    }\n\n    if (this.referrerpolicy) {\n      iframe.setAttribute('referrerpolicy', this.referrerpolicy);\n    }\n\n    iframe.setAttribute('sandbox', this.sandbox);\n\n    if (this.title) {\n      iframe.setAttribute('title', this.title);\n    }\n\n    this.container.appendChild(iframe);\n  }\n\n  /**\n   * Receives a message from the frame. Checks to make sure it is only listening\n   * to the iframe it created, and that the sentinel value and type matches.\n   *\n   * @private\n   * @param {Event} event\n   * @returns {void}\n   */\n  processMessage_(event) {\n    // this message isn't from our created frame, stop here\n    if (event.source !== this.iframe.contentWindow) return;\n\n    const { data } = event;\n\n    // if the sentinel and type matches, update our height\n    if (data.sentinel === AMP_SENTINEL && data.type === EMBED_SIZE) {\n      this.setIframeHeight_(data.height);\n    }\n  }\n\n  /**\n   * Sets the iframe's height.\n   *\n   * @private\n   * @param {number} height\n   * @returns {void}\n   */\n  setIframeHeight_(height) {\n    this.iframe.setAttribute('height', height);\n  }\n}\n\n/**\n * Automatically initializes any frames that have not already been\n * auto-activated.\n *\n * @returns {Array} An array of all the created Framers\n * @example\n *\n * // sets up all frames that have not been initialized yet\n * autoInitFrames();\n */\nfunction autoInitFrames() {\n  const elements = document.querySelectorAll(\n    `[${FRAME_SRC_ATTRIBUTE}]:not([${FRAME_AUTO_INITIALIZED_ATTRIBUTE}])`\n  );\n\n  const activated = [];\n\n  for (let i = 0; i < elements.length; i++) {\n    const container = elements[i];\n\n    const attributes = getMatchingAttributes(container, FRAME_PREFIX);\n    container.setAttribute(FRAME_AUTO_INITIALIZED_ATTRIBUTE, '');\n\n    activated.push(\n      new Framer(\n        extend(\n          {\n            container,\n          },\n          attributes\n        )\n      )\n    );\n  }\n\n  return activated;\n}\n\nexport { autoInitFrames, Framer };\n","// internal\nimport { AMP_SENTINEL, EMBED_SIZE } from './constants.mjs';\nimport { extend } from './utils.mjs';\n\n/**\n * A wrapper around postMessage to normalize the message body. Automatically\n * includes the AMP sentinel value.\n *\n * @private\n * @param {string} type Type of message being sent\n * @param {Object} [data] Any additional data to send\n * @returns {void}\n */\nfunction sendMessage(type, data = {}) {\n  window.parent.postMessage(\n    extend({ sentinel: AMP_SENTINEL, type }, data),\n    '*'\n  );\n}\n\n/**\n * Gets the height of the current document's body. Uses offsetHeight to ensure\n * that margins are accounted for.\n *\n * @private\n * @returns {number}\n */\nfunction getDocumentHeight() {\n  return document.documentElement.offsetHeight;\n}\n\n/**\n * Sends the current document's height or provided value to the host window\n * using postMessage.\n *\n * @param {number} [height] The height to pass to the host page, is determined automatically if not passed\n * @returns {void}\n * @example\n *\n * // Uses the document's height to tell the host page\n * sendFrameHeight();\n *\n * // Pass a height you've determined in another way\n * sendFrameHeight(500);\n *\n */\nfunction sendFrameHeight(height = getDocumentHeight()) {\n  sendMessage(EMBED_SIZE, { height });\n}\n\n/**\n * Sets up an event listener for the load event that sends the new frame\n * height to the host. Automatically removes itself once fired.\n *\n * @returns {void}\n * @example\n *\n * // once the frame's load event is fired, tell the host page its new height\n * sendHeightOnLoad();\n */\nfunction sendHeightOnLoad() {\n  window.addEventListener('load', function cb() {\n    sendFrameHeight();\n\n    window.removeEventListener('load', cb);\n  });\n}\n\n/**\n * Sets up an event listener for the resize event that sends the new frame\n * height to the host.\n *\n * @returns {void}\n * @example\n *\n * // every time the frame is resized, tell the host page what its new height is\n * sendHeightOnResize();\n */\nfunction sendHeightOnResize() {\n  window.addEventListener('resize', () => sendFrameHeight());\n}\n\n/**\n * Sends height updates to the host page on an interval.\n *\n * @param {number} [delay] How long to set the interval\n * @returns {void}\n * @example\n *\n * // will call sendFrameHeight every 300ms\n * sendHeightOnPoll();\n *\n * // will call sendFrameHeight every 150ms\n * sendHeightOnPoll(150);\n */\nfunction sendHeightOnPoll(delay = 300) {\n  setInterval(sendFrameHeight, delay);\n}\n\n/**\n * A helper for running the standard functions for setting up a frame.\n *\n * Automatically calls an sendFrameHeight, sendHeightOnLoad and sendHeightOnResize.\n *\n * @returns {void}\n * @example\n *\n * initFrame();\n */\nfunction initFrame() {\n  sendFrameHeight();\n  sendHeightOnLoad();\n  sendHeightOnResize();\n}\n\n/**\n * Initializes a frame, then sets up a poll to continue to update on an interval.\n *\n * @param {number} [delay] An optional custom delay to pass to sendHeightOnPoll\n * @returns {void}\n * @example\n *\n * // calls initFrame, then calls sendHeightOnPoll\n * initFrameAndPoll();\n */\nfunction initFrameAndPoll(delay) {\n  initFrame();\n  sendHeightOnPoll(delay);\n}\n\nexport {\n  initFrame,\n  initFrameAndPoll,\n  sendFrameHeight,\n  sendHeightOnLoad,\n  sendHeightOnPoll,\n  sendHeightOnResize,\n};\n"]},"metadata":{},"sourceType":"module"}