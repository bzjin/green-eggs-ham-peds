{"version":3,"file":"index.mjs","sources":["../src/utils.mjs","../src/constants.mjs","../src/framer.mjs","../src/frames.mjs"],"sourcesContent":["/**\n * A white-list of attributes to consider booleans for our purposes. Because\n * iframe attributes like \"sandbox\" actually mean something when they're an\n * empty string, we can't assume that means \"true\" across the board.\n *\n * @private\n * @type {Array}\n */\nconst booleans = ['allowfullscreen'];\n\n/**\n * Searches an element's attributes and returns an Object of all the ones that\n * begin with a specified prefix. Each matching attribute name is returned\n * without the prefix.\n *\n * @private\n * @param  {Element} element\n * @param  {string} prefix\n * @return {object}\n */\nfunction getMatchingAttributes(element, prefix) {\n  // prepare the object to return\n  const attrs = {};\n\n  // grab all the attributes off the element\n  const map = element.attributes;\n\n  // get a count of the number of attributes\n  const length = map.length;\n\n  // get the prefix's length\n  const prefixLength = prefix.length;\n\n  // loop through the attributes\n  for (let i = 0; i < length; i++) {\n    // get each attribute key\n    const key = map[i].name;\n\n    // continue if the key begins with supplied prefix\n    if (key.substr(0, prefixLength) === prefix) {\n      // slice off the prefix to get the bare field key\n      const field = key.slice(prefixLength);\n\n      // grab the value associated with the key\n      let value = map[i].value;\n\n      if (booleans.indexOf(field) > -1) {\n        value = true;\n      }\n\n      // add matching key to object\n      attrs[field] = value;\n    }\n  }\n\n  return attrs;\n}\n\nfunction extend(obj, props) {\n  for (let i in props) obj[i] = props[i];\n  return obj;\n}\n\nexport { extend, getMatchingAttributes };\n","const EMBED_SIZE = 'embed-size';\nconst AMP_SENTINEL = 'amp';\nconst FRAME_PREFIX = 'data-frame-';\nconst FRAME_AUTO_INITIALIZED_ATTRIBUTE = `${FRAME_PREFIX}auto-initialized`;\nconst FRAME_SRC_ATTRIBUTE = `${FRAME_PREFIX}src`;\n\nexport {\n  AMP_SENTINEL,\n  EMBED_SIZE,\n  FRAME_PREFIX,\n  FRAME_AUTO_INITIALIZED_ATTRIBUTE,\n  FRAME_SRC_ATTRIBUTE,\n};\n","import { extend, getMatchingAttributes } from './utils.mjs';\nimport {\n  AMP_SENTINEL,\n  EMBED_SIZE,\n  FRAME_PREFIX,\n  FRAME_AUTO_INITIALIZED_ATTRIBUTE,\n  FRAME_SRC_ATTRIBUTE,\n} from './constants.mjs';\n\n/**\n * The Framer object to be called in the host page. Effectively a wrapper around\n * interactions with an embedded iframe.\n *\n * @param {object} options options used to prepare the iframe\n * @param {Element} options.container the containing DOM element for the iframe\n * @param {string} options.src the URL to set as the `src` of the iframe\n * @param {boolean} [options.allowfullscreen] toggles the `allowfullscreen` attribute\n * @param {string} [options.name] sets the `name` attribute\n * @param {string} [options.referrerpolicy] sets the `referrerpolicy` attribute\n * @param {string} [options.sandbox] sets the `sandbox` attribute\n * @param {string} [options.title] sets the `title` attribute\n */\nclass Framer {\n  constructor({\n    allowfullscreen = false,\n    container,\n    name,\n    referrerpolicy,\n    sandbox = 'allow-scripts',\n    src,\n    title,\n  }) {\n    this.container = container;\n    this.src = src;\n    this.allowfullscreen = allowfullscreen;\n    this.name = name;\n    this.referrerpolicy = referrerpolicy;\n    this.sandbox = sandbox;\n    this.title = title;\n\n    this.processMessage_ = this.processMessage_.bind(this);\n    window.addEventListener('message', this.processMessage_, false);\n\n    this.createIframe_();\n  }\n\n  /**\n   * Removes event listeners and removes the iframe from the container.\n   *\n   * @returns {void}\n   * @example\n   *\n   * const framer = new Framer(...);\n   * // tears down the Framer\n   * framer.remove();\n   */\n  remove() {\n    window.removeEventListener('message', this.processMessage_, false);\n    this.container.removeChild(this.iframe);\n    // important to de-reference the iframe so it can be GC'ed\n    this.iframe = null;\n  }\n\n  /**\n   * Creates the iframe element and sets the source of the iframe.\n   *\n   * @private\n   * @returns {void}\n   */\n  createIframe_() {\n    const iframe = (this.iframe = document.createElement('iframe'));\n\n    iframe.setAttribute('src', this.src);\n    iframe.setAttribute('width', '100%');\n    iframe.setAttribute('scrolling', 'no');\n    iframe.setAttribute('marginheight', '0');\n    iframe.setAttribute('frameborder', '0');\n\n    if (this.allowfullscreen) {\n      iframe.setAttribute('allowfullscreen', '');\n    }\n\n    if (this.name) {\n      iframe.setAttribute('name', name);\n    }\n\n    if (this.referrerpolicy) {\n      iframe.setAttribute('referrerpolicy', this.referrerpolicy);\n    }\n\n    iframe.setAttribute('sandbox', this.sandbox);\n\n    if (this.title) {\n      iframe.setAttribute('title', this.title);\n    }\n\n    this.container.appendChild(iframe);\n  }\n\n  /**\n   * Receives a message from the frame. Checks to make sure it is only listening\n   * to the iframe it created, and that the sentinel value and type matches.\n   *\n   * @private\n   * @param {Event} event\n   * @returns {void}\n   */\n  processMessage_(event) {\n    // this message isn't from our created frame, stop here\n    if (event.source !== this.iframe.contentWindow) return;\n\n    const { data } = event;\n\n    // if the sentinel and type matches, update our height\n    if (data.sentinel === AMP_SENTINEL && data.type === EMBED_SIZE) {\n      this.setIframeHeight_(data.height);\n    }\n  }\n\n  /**\n   * Sets the iframe's height.\n   *\n   * @private\n   * @param {number} height\n   * @returns {void}\n   */\n  setIframeHeight_(height) {\n    this.iframe.setAttribute('height', height);\n  }\n}\n\n/**\n * Automatically initializes any frames that have not already been\n * auto-activated.\n *\n * @returns {Array} An array of all the created Framers\n * @example\n *\n * // sets up all frames that have not been initialized yet\n * autoInitFrames();\n */\nfunction autoInitFrames() {\n  const elements = document.querySelectorAll(\n    `[${FRAME_SRC_ATTRIBUTE}]:not([${FRAME_AUTO_INITIALIZED_ATTRIBUTE}])`\n  );\n\n  const activated = [];\n\n  for (let i = 0; i < elements.length; i++) {\n    const container = elements[i];\n\n    const attributes = getMatchingAttributes(container, FRAME_PREFIX);\n    container.setAttribute(FRAME_AUTO_INITIALIZED_ATTRIBUTE, '');\n\n    activated.push(\n      new Framer(\n        extend(\n          {\n            container,\n          },\n          attributes\n        )\n      )\n    );\n  }\n\n  return activated;\n}\n\nexport { autoInitFrames, Framer };\n","// internal\nimport { AMP_SENTINEL, EMBED_SIZE } from './constants.mjs';\nimport { extend } from './utils.mjs';\n\n/**\n * A wrapper around postMessage to normalize the message body. Automatically\n * includes the AMP sentinel value.\n *\n * @private\n * @param {string} type Type of message being sent\n * @param {Object} [data] Any additional data to send\n * @returns {void}\n */\nfunction sendMessage(type, data = {}) {\n  window.parent.postMessage(\n    extend({ sentinel: AMP_SENTINEL, type }, data),\n    '*'\n  );\n}\n\n/**\n * Gets the height of the current document's body. Uses offsetHeight to ensure\n * that margins are accounted for.\n *\n * @private\n * @returns {number}\n */\nfunction getDocumentHeight() {\n  return document.documentElement.offsetHeight;\n}\n\n/**\n * Sends the current document's height or provided value to the host window\n * using postMessage.\n *\n * @param {number} [height] The height to pass to the host page, is determined automatically if not passed\n * @returns {void}\n * @example\n *\n * // Uses the document's height to tell the host page\n * sendFrameHeight();\n *\n * // Pass a height you've determined in another way\n * sendFrameHeight(500);\n *\n */\nfunction sendFrameHeight(height = getDocumentHeight()) {\n  sendMessage(EMBED_SIZE, { height });\n}\n\n/**\n * Sets up an event listener for the load event that sends the new frame\n * height to the host. Automatically removes itself once fired.\n *\n * @returns {void}\n * @example\n *\n * // once the frame's load event is fired, tell the host page its new height\n * sendHeightOnLoad();\n */\nfunction sendHeightOnLoad() {\n  window.addEventListener('load', function cb() {\n    sendFrameHeight();\n\n    window.removeEventListener('load', cb);\n  });\n}\n\n/**\n * Sets up an event listener for the resize event that sends the new frame\n * height to the host.\n *\n * @returns {void}\n * @example\n *\n * // every time the frame is resized, tell the host page what its new height is\n * sendHeightOnResize();\n */\nfunction sendHeightOnResize() {\n  window.addEventListener('resize', () => sendFrameHeight());\n}\n\n/**\n * Sends height updates to the host page on an interval.\n *\n * @param {number} [delay] How long to set the interval\n * @returns {void}\n * @example\n *\n * // will call sendFrameHeight every 300ms\n * sendHeightOnPoll();\n *\n * // will call sendFrameHeight every 150ms\n * sendHeightOnPoll(150);\n */\nfunction sendHeightOnPoll(delay = 300) {\n  setInterval(sendFrameHeight, delay);\n}\n\n/**\n * A helper for running the standard functions for setting up a frame.\n *\n * Automatically calls an sendFrameHeight, sendHeightOnLoad and sendHeightOnResize.\n *\n * @returns {void}\n * @example\n *\n * initFrame();\n */\nfunction initFrame() {\n  sendFrameHeight();\n  sendHeightOnLoad();\n  sendHeightOnResize();\n}\n\n/**\n * Initializes a frame, then sets up a poll to continue to update on an interval.\n *\n * @param {number} [delay] An optional custom delay to pass to sendHeightOnPoll\n * @returns {void}\n * @example\n *\n * // calls initFrame, then calls sendHeightOnPoll\n * initFrameAndPoll();\n */\nfunction initFrameAndPoll(delay) {\n  initFrame();\n  sendHeightOnPoll(delay);\n}\n\nexport {\n  initFrame,\n  initFrameAndPoll,\n  sendFrameHeight,\n  sendHeightOnLoad,\n  sendHeightOnPoll,\n  sendHeightOnResize,\n};\n"],"names":["const","booleans","getMatchingAttributes","element","prefix","attrs","map","attributes","length","prefixLength","i","key","name","substr","field","slice","value","indexOf","extend","obj","props","let","EMBED_SIZE","AMP_SENTINEL","FRAME_PREFIX","FRAME_AUTO_INITIALIZED_ATTRIBUTE","FRAME_SRC_ATTRIBUTE","Framer","constructor","ref","container","src","allowfullscreen","referrerpolicy","sandbox","title","processMessage_","this","bind","window","addEventListener","createIframe_","autoInitFrames","elements","document","querySelectorAll","activated","setAttribute","push","sendFrameHeight","height","data","documentElement","offsetHeight","parent","postMessage","sentinel","sendHeightOnLoad","cb","removeEventListener","sendHeightOnResize","sendHeightOnPoll","delay","setInterval","initFrame","initFrameAndPoll","remove","removeChild","iframe","createElement","appendChild","event","source","contentWindow","type","setIframeHeight_"],"mappings":"AAQAA,IAAMC,EAAW,CAAC,mBAYlB,SAASC,EAAsBC,EAASC,WAEhCC,EAAQ,GAGRC,EAAMH,EAAQI,WAGdC,EAASF,EAAIE,OAGbC,EAAeL,EAAOI,OAGnBE,EAAI,EAAGA,EAAIF,EAAQE,IAAK,KAEzBC,EAAML,EAAII,GAAGE,QAGfD,EAAIE,OAAO,EAAGJ,KAAkBL,EAAQ,KAEpCU,EAAQH,EAAII,MAAMN,GAGpBO,EAAQV,EAAII,GAAGM,MAEff,EAASgB,QAAQH,IAAU,IAC7BE,GAAQ,GAIVX,EAAMS,GAASE,UAIZX,EAGT,SAASa,EAAOC,EAAKC,OACdC,IAAIX,KAAKU,EAAOD,EAAIT,GAAKU,EAAMV,UAC7BS,EC5DTnB,IAAMsB,EAAa,aACbC,EAAe,MACfC,EAAe,cACfC,EAAoCD,qBACpCE,EAAuBF,QCkBvBG,EACJC,SAAYC,2CACQ,8DAIR,4CAILC,2BACAC,IAAMA,OACNC,gBAAkBA,OAClBpB,KAAOA,OACPqB,eAAiBA,OACjBC,QAAUA,OACVC,MAAQA,OAERC,EAAkBC,KAAKD,EAAgBE,KAAKD,MACjDE,OAAOC,iBAAiB,UAAWH,KAAKD,GAAiB,QAEpDK,KAkGT,SAASC,YACDC,EAAWC,SAASC,qBACpBnB,YAA6BD,QAG7BqB,EAAY,GAETpC,EAAI,EAAGA,EAAIiC,EAASnC,OAAQE,IAAK,KAClCoB,EAAYa,EAASjC,GAErBH,EAAaL,EAAsB4B,EAAWN,GACpDM,EAAUiB,aAAatB,EAAkC,IAEzDqB,EAAUE,KACR,IAAIrB,EACFT,EACE,WACEY,GAEFvB,YAMDuC,ECxHT,SAASG,EAAgBC,GAjCzB,IAA2BC,iBAelBP,SAASQ,gBAAgBC,wBAfPF,EAkCD,QAAED,QAlCM,IAChCX,OAAOe,OAAOC,YACZrC,EAAO,CAAEsC,SAAUjC,OAgCTD,GAhC+B6B,GACzC,KA4CJ,SAASM,IACPlB,OAAOC,iBAAiB,OAAQ,SAASkB,IACvCT,IAEAV,OAAOoB,oBAAoB,OAAQD,KAcvC,SAASE,IACPrB,OAAOC,iBAAiB,2BAAgBS,MAgB1C,SAASY,EAAiBC,kBAAQ,KAChCC,YAAYd,EAAiBa,GAa/B,SAASE,IACPf,IACAQ,IACAG,IAaF,SAASK,EAAiBH,GACxBE,IACAH,EAAiBC,GDvEjBI,YAAAA,kBACE3B,OAAOoB,oBAAoB,UAAWtB,KAAKD,GAAiB,QACvDN,UAAUqC,YAAY9B,KAAK+B,aAE3BA,OAAS,MAShB3B,YAAAA,iBACQ2B,EAAU/B,KAAK+B,OAASxB,SAASyB,cAAc,YAE9CtB,aAAa,MAAOV,KAAKN,OACzBgB,aAAa,QAAS,UACtBA,aAAa,YAAa,QAC1BA,aAAa,eAAgB,OAC7BA,aAAa,cAAe,KAE/BV,KAAKL,mBACAe,aAAa,kBAAmB,IAGrCV,KAAKzB,QACAmC,aAAa,OAAQnC,MAG1ByB,KAAKJ,kBACAc,aAAa,iBAAkBV,KAAKJ,kBAGtCc,aAAa,UAAWV,KAAKH,SAEhCG,KAAKF,SACAY,aAAa,QAASV,KAAKF,YAG/BL,UAAUwC,YAAYF,IAW7BhC,YAAAA,WAAgBmC,MAEVA,EAAMC,SAAWnC,KAAK+B,OAAOK,eAEzBtB,aAGJA,EAAKK,WAAajC,GAAgB4B,EAAKuB,OAASpD,QAC7CqD,EAAiBxB,EAAKD,UAW/ByB,YAAAA,WAAiBzB,QACVkB,OAAOrB,aAAa,SAAUG"}